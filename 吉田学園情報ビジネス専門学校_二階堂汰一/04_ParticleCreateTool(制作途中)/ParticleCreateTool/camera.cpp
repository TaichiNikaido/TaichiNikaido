//=============================================================================
//
// カメラ [camera.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "camera.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define VECTOR (D3DXVECTOR3(0.0f, 1.0f, 0.0f))		//上方向ベクトル

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CCamera::CCamera()
{
	m_PositionV = INITIAL_D3DXVECTOR3;	//視点の位置
	m_PositionR = INITIAL_D3DXVECTOR3;	//注視点の位置
	m_VectorU = INITIAL_D3DXVECTOR3;	//上方向ベクトル
	m_Rotation = INITIAL_D3DXVECTOR3;	//回転
	m_fDistance = INITIAL_FLOAT;		//視点と注視点の距離
}

//=============================================================================
// デストラクタ
//=============================================================================
CCamera::~CCamera()
{
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CCamera::Init(void)
{
	//視点を設定する
	m_PositionV = D3DXVECTOR3(0.0f,0.0f,-300.0f);
	//注視点の設定
	m_PositionR = D3DXVECTOR3(0.0f,0.0f,300.0f);
	//上方向ベクトルの初期設定
	m_VectorU = VECTOR;
	//回転方向の初期設定
	m_Rotation = D3DXVECTOR3(0.0f,0.0f,0.0f);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CCamera::Uninit(void)
{
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CCamera::Update(void)
{
}

//=============================================================================
// カメラ設定関数
//=============================================================================
void CCamera::SetCamera(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();
	//ビューマトリックスの初期化
	D3DXMatrixIdentity(&m_MtxView);
	//ビューマトリックスの作成
	D3DXMatrixLookAtLH(&m_MtxView, &m_PositionV, &m_PositionR, &m_VectorU);
	//ビューマトリックスの設定
	pDevice->SetTransform(D3DTS_VIEW, &m_MtxView);
	//プロジェクションマトリックスの初期化
	D3DXMatrixIdentity(&m_MtxProjection);
	//プロジェクションマトリックスの作成
	D3DXMatrixPerspectiveFovLH(&m_MtxProjection, D3DXToRadian(45.0f), (float)SCREEN_WIDTH / (float)SCREEN_HEIGHT, 10.0f, 10000.0f);
	//プロジェクションマトリックスの設定
	pDevice->SetTransform(D3DTS_PROJECTION, &m_MtxProjection);
}