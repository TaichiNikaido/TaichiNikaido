//=============================================================================
//
// シーン管理 [scene.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "scene.h"
#include "renderer.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
CScene * CScene::m_apScene[MAX_SCENE] = {};	//シーンへのポインタ
int CScene::m_nNumAll = 0;					//シーンの総数

//=============================================================================
// コンストラクタ
//=============================================================================
CScene::CScene()
{
	m_nID = 0;
	for (int nCount = 0; nCount < MAX_SCENE; nCount++)
	{
		if (m_apScene[nCount] == NULL)
		{
			m_apScene[nCount] = this;
			m_nID = nCount;
			m_nNumAll++;
			break;
		}
	}
}

//=============================================================================
// デストラクタ
//=============================================================================
CScene::~CScene()
{
}

//=============================================================================
// 全体更新関数
//=============================================================================
void CScene::UpdateAll(void)
{
	for (int nCount = 0; nCount < MAX_SCENE; nCount++)
	{
		if (m_apScene[nCount] != NULL)
		{
			m_apScene[nCount]->Update();
		}
	}
}

//=============================================================================
// 全体描画関数
//=============================================================================
void CScene::DrawAll(void)
{
	for (int nCount = 0; nCount < MAX_SCENE; nCount++)
	{
		if (m_apScene[nCount] != NULL)
		{
			m_apScene[nCount]->Draw();
		}
	}
}

//=============================================================================
// 全体破棄関数
//=============================================================================
void CScene::ReleaseAll(void)
{
	for (int nCount = 0; nCount < MAX_SCENE; nCount++)
	{
		if (m_apScene[nCount] != NULL)
		{
			m_apScene[nCount]->Uninit();
			m_apScene[nCount] = NULL;
		}
	}
}


//=============================================================================
// 破棄関数
//=============================================================================
void CScene::Release(void)
{
	if (m_apScene[m_nID] != NULL)
	{
		int nID = m_nID;
		delete m_apScene[nID];
		m_apScene[nID] = NULL;
		m_nNumAll--;
	}
}