//=============================================================================
//
// 敵の弾 [bullet_enemy.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "renderer.h"
#include "scene2d.h"
#include "bullet.h"
#include "player.h"
#include "bullet_enemy.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MINIMUM_LIFE (0)

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CBulletEnemy::CBulletEnemy()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CBulletEnemy::~CBulletEnemy()
{
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CBulletEnemy::Init(void)
{
	//弾の初期化処理関数呼び出し
	CBullet::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CBulletEnemy::Uninit(void)
{
	//弾の終了処理関数呼び出し
	CBullet::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CBulletEnemy::Update(void)
{
	//弾の更新処理関数呼び出し
	CBullet::Update();
	//衝突判定処理関数呼び出し
	Collision();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CBulletEnemy::Draw(void)
{
	//弾の描画処理関数呼び出し
	CBullet::Draw();
}

//=============================================================================
// 衝突判定処理関数
//=============================================================================
void CBulletEnemy::Collision(void)
{
	//プレイヤーの取得
	CPlayer * pPlayer = CGameMode::GetPlayer();
	//もしプレイヤーがNULLじゃない場合
	if (pPlayer != NULL)
	{
		//もしプレイヤーの状態が死亡状態じゃないとき
		if (pPlayer->GetState() != CPlayer::STATE_DEATH)
		{
			//プレイヤーとの衝突判定
			if (GetPosition().x + GetSize().x / 2 > pPlayer->GetPosition().x - (pPlayer->GetSize().x - 55) &&
				GetPosition().x - GetSize().x / 2 < pPlayer->GetPosition().x + (pPlayer->GetSize().x - 55) &&
				GetPosition().y + GetSize().y / 2 > pPlayer->GetPosition().y - (pPlayer->GetSize().y - 55) &&
				GetPosition().y - GetSize().y / 2 < pPlayer->GetPosition().y + (pPlayer->GetSize().y - 55))
			{
				//プレイヤーにダメージを与える
				pPlayer->SubLife(GetAttack());
				//体力を0にする
				SetLife(MINIMUM_LIFE);
			}
		}
	}
}
