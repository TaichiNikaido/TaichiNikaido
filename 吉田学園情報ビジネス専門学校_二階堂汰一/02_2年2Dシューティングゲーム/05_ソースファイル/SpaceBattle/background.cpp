//=============================================================================
//
// 背景 [background.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "renderer.h"
#include "scene2d.h"
#include "background.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MOVE (0.001f)				//移動量
#define MINIMUM_PATTERN_ANIME (0)	//パターンアニメの最小値
#define MINIMUM_COUNTER_ANIME (0)	//カウンターアニメの最小値
#define MINIMUM_FLAME (0)			//フレームの最小値

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CBackground::CBackground(int nPriority) : CScene2d(nPriority)
{
	m_nPatternAnime = MINIMUM_PATTERN_ANIME;	//パターンアニメ
	m_nCountAnime = MINIMUM_COUNTER_ANIME;		//カウントアニメ
	m_nFlame = MINIMUM_FLAME;					//切り替えるフレーム
}

//=============================================================================
// デストラクタ
//=============================================================================
CBackground::~CBackground()
{
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CBackground::Init(void)
{
	//2Dシーンの初期化処理関数呼び出し
	CScene2d::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CBackground::Uninit(void)
{
	//2Dシーンの終了処理関数呼び出し
	CScene2d::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CBackground::Update(void)
{
	//2Dシーンの更新処理関数呼び出し
	CScene2d::Update();
	//もしフレームが0より上だったら
	if (m_nFlame > MINIMUM_FLAME)
	{
		//指定フレームごとにパターンアニメを更新する
		if (m_nCountAnime % m_nFlame == REMAINDER)
		{
			//パターンアニメを加算する
			m_nPatternAnime++;
			//カウントアニメを0にする
			m_nCountAnime = MINIMUM_COUNTER_ANIME;
		}
	}
	//テクスチャのUV座標の設定
	D3DXVECTOR2 aTexture[NUM_VERTEX];
	aTexture[0] = D3DXVECTOR2(0.0f, -m_nPatternAnime * MOVE);
	aTexture[1] = D3DXVECTOR2(1.0f, -m_nPatternAnime * MOVE);
	aTexture[2] = D3DXVECTOR2(0.0f, -m_nPatternAnime * MOVE + 1.0f);
	aTexture[3] = D3DXVECTOR2(1.0f, -m_nPatternAnime * MOVE + 1.0f);
	//テクスチャの設定
	SetTexture(aTexture);
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CBackground::Draw(void)
{
	//2Dシーンの描画処理関数呼び出し
	CScene2d::Draw();
}

//=============================================================================
// 切り替えるフレーム設定関数
//=============================================================================
void CBackground::SetFlame(int nFlame)
{
	//切り替えるフレームを設定する
	m_nFlame = nFlame;
}
