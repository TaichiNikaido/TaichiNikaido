//=============================================================================
//
// 花弾 [bullet_flower.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "scene2d.h"
#include "bullet_flower.h"
#include "bullet.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CBulletFlower::m_pTexture = NULL;	//テクスチャへのポインタ

//=============================================================================
// コンストラクタ
//=============================================================================
CBulletFlower::CBulletFlower(int nPriority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CBulletFlower::~CBulletFlower()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CBulletFlower::TextureLoad(void)
{
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CBulletFlower::TextureUnload(void)
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CBulletFlower * CBulletFlower::Create(D3DXVECTOR3 Position, D3DXVECTOR3 Speed)
{
	CBulletFlower * pBulletFlower;
	pBulletFlower = new CBulletFlower;
	pBulletFlower->Init();
	pBulletFlower->SetPosition(Position);
	pBulletFlower->SetMove(Speed);
	return pBulletFlower;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CBulletFlower::Init(void)
{
	//テクスチャのUV座標の設定
	D3DXVECTOR2 aTexture[NUM_VERTEX];
	aTexture[0] = D3DXVECTOR2(0.0f, 0.0f);
	aTexture[1] = D3DXVECTOR2(1.0f, 0.0f);
	aTexture[2] = D3DXVECTOR2(0.0f, 1.0f);
	aTexture[3] = D3DXVECTOR2(1.0f, 1.0f);
	//敵の弾の初期化処理関数呼び出し
	CBulletEnemy::Init();
	////色の初期設定
	//SetColor(COLOR);
	////体力の初期設定
	//SetLife(LIFE);
	////テクスチャの設定
	SetTexture(aTexture);
	//テクスチャの割り当て
	BindTexture(m_pTexture);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CBulletFlower::Uninit(void)
{
	//敵の弾の終了処理関数呼び出し
	CBulletEnemy::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CBulletFlower::Update(void)
{
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CBulletFlower::Draw(void)
{
}
