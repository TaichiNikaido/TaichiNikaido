//=============================================================================
//
// 体力のUI [ui_life.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <cmath>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "ui_life_texture.h"
#include "ui_life.h"
#include "player.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define POSITION (D3DXVECTOR3(450.0f,30.0f,0.0f))
#define SIZE (D3DXVECTOR3(45.0f,45.0f,0.0f))

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CLifeUI::CLifeUI(int nPriority) :CScene(nPriority)
{
	memset(m_apLifeTexture, 0, sizeof(m_apLifeTexture));	//UI用数字テクスチャへのポインタ
}

//=============================================================================
//デストラクタ
//=============================================================================
CLifeUI::~CLifeUI()
{
}

//=============================================================================
// 生成
//=============================================================================
CLifeUI * CLifeUI::Create(void)
{
	CLifeUI * pLifeUI;
	pLifeUI = new CLifeUI;
	pLifeUI->Init();
	return pLifeUI;
}

//=============================================================================
// 初期化関数
//=============================================================================
HRESULT CLifeUI::Init(void)
{
	for (int nCount = 0; nCount < PLAYER_MAX_LIFE; nCount++)
	{
		m_apLifeTexture[nCount] = CUILifeTexture::Create(D3DXVECTOR3(POSITION.x + (SIZE.x * nCount), POSITION.y, 0.0f), SIZE);
	}
	return S_OK;
}

//=============================================================================
// 終了関数
//=============================================================================
void CLifeUI::Uninit(void)
{
	Release();
}

//=============================================================================
// 更新関数
//=============================================================================
void CLifeUI::Update(void)
{
}

//=============================================================================
// 描画関数
//=============================================================================
void CLifeUI::Draw(void)
{
	for (int nCount = 0; nCount < PLAYER_MAX_LIFE; nCount++)
	{
		m_apLifeTexture[nCount]->Draw();
	}
}

//=============================================================================
// セット関数
//=============================================================================
void CLifeUI::SetLife(int nLife)
{
	//もし自機のUIが最大数以下だった時
	if (nLife <= PLAYER_MAX_LIFE)
	{
		for (int nCount = 0; nCount < PLAYER_MAX_LIFE; nCount++)
		{
			m_apLifeTexture[nCount]->SetLifeTexture(0);
		}
		for (int nCount = 0; nCount < nLife; nCount++)
		{
			m_apLifeTexture[nCount]->SetLifeTexture(255);
		}

	}
}
