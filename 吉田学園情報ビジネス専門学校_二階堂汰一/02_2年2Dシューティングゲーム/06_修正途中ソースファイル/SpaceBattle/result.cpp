//=============================================================================
//
// リザルト [result.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// 警告制御
//*****************************************************************************
#define _CRT_SECURE_NO_WARNINGS

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "name.h"
#include "renderer.h"
#include "manager.h"
#include "result.h"
#include <stdio.h>
#include <stdlib.h>

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CResult::CResult()
{
	memset(&m_PlayerData, NULL, sizeof(m_PlayerData));
}

//=============================================================================
// デストラクタ
//=============================================================================
CResult::~CResult()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CResult * CResult::Create()
{
	CResult * pResult;
	pResult = new CResult;
	pResult->Init();
	return pResult;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CResult::Init()
{
	//データ読み込み関数呼び出し
	DataLoad();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CResult::Uninit(void)
{
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CResult::Update(void)
{
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CResult::Draw(void)
{
}

//=============================================================================
// データ読み込み関数
//=============================================================================
void CResult::DataLoad(void)
{
	FILE *pFile;
	pFile = fopen("data/TEXT/PlayerData.txt", "r"); //ファイルの読み込み
	if (pFile != NULL)
	{
		fscanf(pFile, "%s", &m_PlayerData.aName);		//名前入力
		fscanf(pFile, "%d", &m_PlayerData.nDeath);		//死んだ回数
		fscanf(pFile, "%d", &m_PlayerData.nContinue);	//コンティニューした回数
		fscanf(pFile, "%d", &m_PlayerData.nBomb);		//使用したボムの個数
		fscanf(pFile, "%d", &m_PlayerData.nScore);		//スコア
		//ファイルを閉じる
		fclose(pFile);
	}
}
