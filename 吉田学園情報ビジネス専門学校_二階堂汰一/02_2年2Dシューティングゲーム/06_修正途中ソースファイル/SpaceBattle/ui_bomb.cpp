//=============================================================================
//
// 爆弾のUI [ui_bomb.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <cmath>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "ui_bomb_texture.h"
#include "ui_bomb.h"
#include "player.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define POSITION (D3DXVECTOR3(450.0f,80.0f,0.0f))
#define SIZE (D3DXVECTOR3(45.0f,45.0f,0.0f))

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CBombUI::CBombUI(int nPriority) :CScene(nPriority)
{
	memset(m_apBombTexture, 0, sizeof(m_apBombTexture));
}

//=============================================================================
//デストラクタ
//=============================================================================
CBombUI::~CBombUI()
{
}

//=============================================================================
// 生成
//=============================================================================
CBombUI * CBombUI::Create(void)
{
	CBombUI * pBombUI;
	pBombUI = new CBombUI;
	pBombUI->SetPosition(POSITION);
	pBombUI->Init();
	return pBombUI;
}

//=============================================================================
// 初期化関数
//=============================================================================
HRESULT CBombUI::Init(void)
{
	for (int nCount = 0; nCount < PLAYER_MAX_BOMB; nCount++)
	{
		m_apBombTexture[nCount] = CUIBombTexture::Create(D3DXVECTOR3(POSITION.x + (SIZE.x * nCount), POSITION.y, 0.0f), SIZE);
	}
	return S_OK;
}

//=============================================================================
// 終了関数
//=============================================================================
void CBombUI::Uninit(void)
{
	Release();
}

//=============================================================================
// 更新関数
//=============================================================================
void CBombUI::Update(void)
{
}

//=============================================================================
// 描画関数
//=============================================================================
void CBombUI::Draw(void)
{
	for (int nCount = 0; nCount < PLAYER_MAX_BOMB; nCount++)
	{
		m_apBombTexture[nCount]->Draw();
	}
}

//=============================================================================
// セット関数
//=============================================================================
void CBombUI::SetBomb(int nBomb)
{
	//もし爆弾のUIが最大数以下だった時
	if (nBomb <= PLAYER_MAX_BOMB)
	{
		for (int nCount = 0; nCount < PLAYER_MAX_BOMB; nCount++)
		{
			m_apBombTexture[nCount]->SetBombTexture(100);
		}

		for (int nCount = 0; nCount < nBomb; nCount++)
		{
			m_apBombTexture[nCount]->SetBombTexture(255);
		}
	}
}
