//=============================================================================
//
// ポーズ背景 [background_pause.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "Base/main.h"
#include "Base/manager.h"
#include "Base/renderer.h"
#include "background_pause.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define SIZE (D3DXVECTOR3(SCREEN_WIDTH,SCREEN_HEIGHT,0.0f))			//サイズ
#define COLOR (D3DXCOLOR(0.0f,0.0f,0.0f,0.5f))						//色
#define FLAME (0)													//フレーム

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CBackgroundPause::CBackgroundPause()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CBackgroundPause::~CBackgroundPause()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CBackgroundPause * CBackgroundPause::Create(D3DXVECTOR3 Position)
{
	//ポーズ背景のポインタ
	CBackgroundPause * pbackgeroundPuase = NULL;
	//もしポーズ背景がNULLの場合
	if (pbackgeroundPuase == NULL)
	{
		//ラポーズ背景のメモリを確保する
		pbackgeroundPuase = new CBackgroundPause;
		//もしポーズ背景がNULLではない場合
		if (pbackgeroundPuase != NULL)
		{
			//ポーズ背景の初期化処理関数呼び出し
			pbackgeroundPuase->Init();
			//ポーズ背景の位置を設定する
			pbackgeroundPuase->SetPosition(Position);
		}
	}
	//ポーズ背景を返す
	return pbackgeroundPuase;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CBackgroundPause::Init(void)
{
	//テクスチャのUV座標の設定
	D3DXVECTOR2 aTexture[NUM_VERTEX];
	aTexture[0] = D3DXVECTOR2(0.0f, 0.0f);
	aTexture[1] = D3DXVECTOR2(1.0f, 0.0f);
	aTexture[2] = D3DXVECTOR2(0.0f, 1.0f);
	aTexture[3] = D3DXVECTOR2(1.0f, 1.0f);
	//背景の初期化処理関数呼び出し
	CBackground::Init();
	//サイズの初期設定
	SetSize(SIZE);
	//色の初期設定
	SetColor(COLOR);
	//フレームの初期設定
	SetFlame(FLAME);
	//テクスチャの設定
	SetTexture(aTexture);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CBackgroundPause::Uninit(void)
{
	//背景の終了処理関数呼び出し
	CBackground::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CBackgroundPause::Update(void)
{
	//背景の更新処理関数呼び出し
	CBackground::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CBackgroundPause::Draw(void)
{
	//背景の描画処理関数呼び出し
	CBackground::Draw();
}
