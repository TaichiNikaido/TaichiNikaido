//=============================================================================
//
// オブジェクト [object.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "Base/main.h"
#include "Base/manager.h"
#include "Base/renderer.h"
#include "Mode/mode_game.h"
#include "Character/player.h"
#include "object_wood_box.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CWoodBox::CWoodBox()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CWoodBox::~CWoodBox()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CWoodBox * CWoodBox::Create(void)
{
	//木箱のポインタ
	CWoodBox * pWoodBox = nullptr;
	//木箱のポインタがnullptrの場合
	if (pWoodBox == nullptr)
	{
		//木箱のメモリ確保
		pWoodBox = new CWoodBox;
		//木箱のポインタがnullptrではない場合
		if (pWoodBox != nullptr)
		{
			//木箱の初期化処理関数呼び出し
			pWoodBox->Init();
		}
	}
	//木箱のポインタを返す
	return pWoodBox;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CWoodBox::Init(void)
{
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CWoodBox::Uninit(void)
{
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CWoodBox::Update(void)
{
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CWoodBox::Draw(void)
{
}