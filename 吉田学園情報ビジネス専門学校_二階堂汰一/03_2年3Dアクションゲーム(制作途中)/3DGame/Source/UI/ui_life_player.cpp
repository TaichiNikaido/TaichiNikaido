//=============================================================================
//
// プレイヤーの体力UI [ui_life_player.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "Base/main.h"
#include "Base/manager.h"
#include "Base/renderer.h"
#include "Mode/mode_game.h"
#include "ui_life_player.h"
#include "Character/player.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define UI_LIFE (4)		//1つのUIの体力

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CPlayerLifeUI::CPlayerLifeUI(int nPriority) : CScene(nPriority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CPlayerLifeUI::~CPlayerLifeUI()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CPlayerLifeUI * CPlayerLifeUI::Create()
{
	//プレイヤーの体力UIポインタ
	CPlayerLifeUI * pPlayerLifeUI = nullptr;
	//プレイヤーの体力UIポインタがnullptrの場合
	if (pPlayerLifeUI == nullptr)
	{
		//プレイヤーの体力UIのメモリ確保
		pPlayerLifeUI = new CPlayerLifeUI;
		//プレイヤーの体力UIのポインタがNULLではない場合
		if (pPlayerLifeUI != nullptr)
		{
			//プレイヤーの体力UIの初期化処理関数呼び出し
			pPlayerLifeUI->Init();
		}
	}
	//プレイヤーの体力UIのポインタを返す
	return pPlayerLifeUI;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CPlayerLifeUI::Init(void)
{
	//プレイヤーの取得
	CPlayer * pPlayer = CGameMode::GetPlayer();
	//もしプレイヤーのポインタがnullptrではない場合
	if (pPlayer != nullptr)
	{
		//プレイヤーの体力を取得
		int nPlayerLife = pPlayer->GetLife();
		//UIの生成数を求める
		int nUICreateCount = nPlayerLife / UI_LIFE;
		//UIの生成数分回す
		for (int nCount = 0; nCount < nUICreateCount; nCount++)
		{

		}
	}
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CPlayerLifeUI::Uninit(void)
{
	//破棄処理関数呼び出し
	Release();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CPlayerLifeUI::Update(void)
{
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CPlayerLifeUI::Draw(void)
{
}
