//=============================================================================
//
// ライフのUI [ui_life.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "Base/main.h"
#include "Base/manager.h"
#include "Base/renderer.h"
#include "ui_life.h"
#include "Polygon2d/gauge.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MINIMUM_LIFE (0)	//体力の最小値

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CLifeUI::CLifeUI()
{
	m_Position = INITIAL_D3DXVECTOR3;	//位置
	m_Size = INITIAL_D3DXVECTOR3;		//サイズ
	m_Color = INITIAL_D3DXCOLOR;		//色
	m_nMaxLife = MINIMUM_LIFE;			//体力の最大値
	m_nLife = MINIMUM_LIFE;				//体力
	m_pGauge = NULL;					//ゲージのポインタ
}

//=============================================================================
// デストラクタ
//=============================================================================
CLifeUI::~CLifeUI()
{
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CLifeUI::Init(void)
{
	//もしゲージのポインタがnullptrじゃない場合
	if (m_pGauge != nullptr)
	{
		//ゲージに値の最大値を設定
		m_pGauge->SetMaxValue(m_nMaxLife);
		//ゲージに値を設定
		m_pGauge->SetValue(m_nLife);
	}
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CLifeUI::Uninit(void)
{
	//破棄処理関数呼び出し
	Release();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CLifeUI::Update(void)
{
	//もしゲージのポインタがnullptrじゃない場合
	if (m_pGauge != nullptr)
	{
		//ゲージに値の最大値を設定
		m_pGauge->SetMaxValue(m_nMaxLife);
		//ゲージに値を設定
		m_pGauge->SetValue(m_nLife);
	}
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CLifeUI::Draw(void)
{
}