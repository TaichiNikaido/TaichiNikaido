//=============================================================================
//
// 体力回復アイテム [item_heal.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "Base/main.h"
#include "Base/manager.h"
#include "Base/renderer.h"
#include "Mode/mode_game.h"
#include "Character/player.h"
#include "item_heal.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define HEAL_VALUE (4)	//体力の回復量

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CHealItem::CHealItem()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CHealItem::~CHealItem()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CHealItem * CHealItem::Create(void)
{
	//回復アイテムのポインタ
	CHealItem * pHealItem = nullptr;
	//回復アイテムのポインタがnullptrの場合
	if (pHealItem == nullptr)
	{
		//回復アイテムのメモリ確保
		pHealItem = new CHealItem;
		//回復アイテムのポインタがnullptrではない場合
		if (pHealItem != nullptr)
		{
			//回復アイテムの初期化処理関数呼び出し
			pHealItem->Init();
		}
	}
	//回復アイテムのポインタを返す
	return pHealItem;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CHealItem::Init(void)
{
	//アイテムの初期化処理関数呼び出し
	CItem::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CHealItem::Uninit(void)
{
	//アイテムの終了処理関数呼び出し
	CItem::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CHealItem::Update(void)
{
	//アイテムの更新処理関数呼び出し
	CItem::Update();
	//もしアイテムがプレイヤーと衝突した場合
	if (GetbCollision() == true)
	{
		//効果処理関数呼び出し
		Effect();
	}
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CHealItem::Draw(void)
{
	//アイテムの描画処理関数呼び出し
	CItem::Draw();
}

//=============================================================================
// 効果処理関数
//=============================================================================
void CHealItem::Effect()
{
	//プレイヤーの取得
	CPlayer * pPlayer = CGameMode::GetPlayer();
	//もしプレイヤーのポインタがnullptrではない場合
	if (pPlayer != nullptr)
	{
		//プレイヤーの体力加算処理関数呼び出し
		pPlayer->AddLife(HEAL_VALUE);
	}
}
