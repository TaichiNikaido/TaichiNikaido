//=============================================================================
//
// ゲームモード [mode_game.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "sound.h"
#include "keyboard.h"
#include "joystick.h"
#include "mode_game.h"
#include "light.h"
#include "camera.h"
#include "floor.h"
#include "player.h"
#include "enemy_dragon.h"
#include "pose_button_manager.h"
#include "skybox.h"
#include "shadow.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CGameMode::CGameMode()
{
	m_pPlayer = nullptr;	//プレイヤーのポインタ
	m_pCamera = NULL;	//カメラのポインタ
	m_pDragon = NULL;	//ドラゴンのポインタ
	m_pLight = NULL;	//ライトのポインタ
	m_bPouse = false;	//ポーズを使用してるか
}

//=============================================================================
// デストラクタ
//=============================================================================
CGameMode::~CGameMode()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CGameMode * CGameMode::Create()
{
	//ゲームモードのポインタ
	CGameMode * pGameMode = NULL;
	//もしゲームモードのポインタをNULLだった場合
	if (pGameMode == NULL)
	{
		//ゲームモードのメモリ確保
		pGameMode = new CGameMode;
		//もしゲームモードのポインタをNULLではない場合
		if (pGameMode != NULL)
		{
			//ゲームモードの初期化関数呼び出し
			pGameMode->Init();
		}
	}
	//ゲームモードのポインタを返す
	return pGameMode;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CGameMode::Init(void)
{
	//サウンドの取得
	CSound * pSound = CManager::GetSound();
	//もしサウンドのポインタがNULLではない場合
	if (pSound != NULL)
	{
		//名前入力のBGM停止 
		pSound->StopSound(CSound::SOUND_LABEL_BGM_NAME);
	}
	//初期生成処理関数呼び出し
	InitCreate();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CGameMode::Uninit(void)
{
	//もしカメラのポインタがNULLではない場合
	if (m_pCamera != NULL)
	{
		//カメラの終了処理関数呼び出し
		m_pCamera->Uninit();
		//カメラのメモリ破棄
		delete m_pCamera;
		//カメラのポインタをNULLにする
		m_pCamera = NULL;
	}
	//もしライトのポインタがNULLではない場合
	if (m_pLight != NULL)
	{
		//ライトの終了処理関数呼び出し
		m_pLight->Uninit();
		//ライトのメモリ破棄
		delete m_pLight;
		//ライトのポインタをNULLにする
		m_pLight = NULL;
	}
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CGameMode::Update(void)
{
	//更新生成処理関数呼び出し
	UpdateCreate();
	//もしカメラのポインタがNULLではない場合
	if (m_pCamera != NULL)
	{
		//カメラを設定する
		m_pCamera->SetCamera();
		//カメラの更新処理関数呼び出し
		m_pCamera->Update();
	}
	//入力処理関数呼び出し
	Input();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CGameMode::Draw(void)
{
}

//=============================================================================
// 入力処理関数
//=============================================================================
void CGameMode::Input(void)
{
	//キーボードの取得
	CKeyboard * pKeyboard = CManager::GetKeyboard();
	//ジョイスティックの取得
	CJoystick * pJoystick = CManager::GetJoystick();
	LPDIRECTINPUTDEVICE8 lpDIDevice = CJoystick::GetDevice();
	DIJOYSTATE js;
	//ジョイスティックの振動取得
	LPDIRECTINPUTEFFECT pDIEffect = CJoystick::GetEffect();
	if (lpDIDevice != NULL)
	{
		lpDIDevice->Poll();
		lpDIDevice->GetDeviceState(sizeof(DIJOYSTATE), &js);
	}
		//もしESCAPEキー又はジョイスティックのスタートボタンを押されたら
	if (pKeyboard->GetKeyboardTrigger(DIK_ESCAPE) || pJoystick->GetJoystickTrigger(JS_START))
	{
		//もしポーズを使用していない場合
		if (m_bPouse == false)
		{
			//ポーズボタンマネージャーの生成処理関数呼び出し
			CPoseButtonManager::Create();
		}
	}
}

//=============================================================================
// 初期生成処理関数
//=============================================================================
void CGameMode::InitCreate(void)
{
	//全基本生成処理関数呼び出し
	BaseCreateAll();
	//全UI生成処理関数呼び出し
	UICreateAll();
	//全マップオブジェクト生成処理関数呼び出し
	MapObjectCreateAll();
	//全キャラクター生成処理関数呼び出し
	CharacterCreateAll();
}

//=============================================================================
// 更新生成処理関数
//=============================================================================
void CGameMode::UpdateCreate(void)
{
}

//=============================================================================
// 全基本生成処理関数
//=============================================================================
void CGameMode::BaseCreateAll(void)
{
	//もしライトのポインタがNULLの場合
	if (m_pLight == NULL)
	{
		//ライトのメモリ確保
		m_pLight = new CLight;
		//もしライトのポインタがNULLではない場合
		if (m_pLight != NULL)
		{
			//ライトの初期化処理関数呼び出し
			m_pLight->Init();
		}
	}
	//もしカメラのポインタがNULLの場合
	if (m_pCamera == NULL)
	{
		//カメラのメモリ確保
		m_pCamera = new CCamera;
		//もしカメラのポインタがNULLではない場合
		if (m_pCamera != NULL)
		{
			//カメラの初期化処理関数呼び出し
			m_pCamera->Init();
		}
	}
}

//=============================================================================
// 全マップオブジェクト生成処理関数
//=============================================================================
void CGameMode::MapObjectCreateAll(void)
{
	//スカイボックスの生成
	CSkyBox::Create();
	//床の生成
	CFloor::Create();
}

//=============================================================================
// 全キャラクター生成処理関数
//=============================================================================
void CGameMode::CharacterCreateAll(void)
{
	//もしプレイヤーのポインタがNULLの場合
	if (m_pPlayer == NULL)
	{
		//プレイヤーの生成
		m_pPlayer = CPlayer::Create();
	}
	//もしドラゴンのポインタがNULLの場合
	if (m_pDragon == NULL)
	{
		//ドラゴンの生成
		m_pDragon = CDragon::Create();
	}
	//CShadow::Create();
}

//=============================================================================
// 全UI生成処理関数
//=============================================================================
void CGameMode::UICreateAll(void)
{
}