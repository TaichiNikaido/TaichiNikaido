//=============================================================================
//
// ドラゴンのライフのUI [ui_life_dragon.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "renderer.h"
#include "ui_life_dragon.h"
#include "gauge.h"
#include "ui_life.h"
#include "enemy_dragon.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define SCRIPT_PASS ("Data/Script")

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CDragonLifeUI::CDragonLifeUI()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CDragonLifeUI::~CDragonLifeUI()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CDragonLifeUI * CDragonLifeUI::Create()
{
	//ドラゴンのライフのUIポインタ
	CDragonLifeUI * pDragonLifeUI = NULL;
	//ドラゴンのライフのUIポインタがNULLの場合
	if (pDragonLifeUI == NULL)
	{
		//ドラゴンのライフのUIのメモリ確保
		pDragonLifeUI = new CDragonLifeUI;
		//ドラゴンのライフのUIのポインタがNULLではない場合
		if (pDragonLifeUI != NULL)
		{
			//ドラゴンのライフのUIの初期化処理関数呼び出し
			pDragonLifeUI->Init();
		}
	}
	//ドラゴンのライフのUIのポインタを返す
	return pDragonLifeUI;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CDragonLifeUI::Init(void)
{
	//ドラゴンの取得
	CDragon * pDragon = CGameMode::GetDragon();
	//もしドラゴンのポインタがNULLじゃない場合
	if (pDragon != NULL)
	{
		//ドラゴンの体力を取得
		int nLife = pDragon->GetLife();
		//体力の最大値を設定
		SetMaxLife(nLife);
		//体力を設定
		SetLife(nLife);
	}
	//スクリプトパスを設定

	//ゲージの生成処理関数呼び出し
	SetGauge(CGauge::Create(D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f)));
	//ライフの初期化処理関数呼び出し
	CLifeUI::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CDragonLifeUI::Uninit(void)
{
	//ライフのUIの終了処理関数呼び出し
	CLifeUI::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CDragonLifeUI::Update(void)
{
	//ライフのUIの更新処理関数呼び出し
	CLifeUI::Update();
	//ドラゴンの取得
	CDragon * pDragon = CGameMode::GetDragon();
	//もしドラゴンのポインタがNULLじゃない場合
	if (pDragon != NULL)
	{
		//ドラゴンの体力を取得
		int nLife = pDragon->GetLife();
		//体力を設定
		SetLife(nLife);
	}
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CDragonLifeUI::Draw(void)
{
	//ライフのUIの描画処理関数呼び出し
	CLifeUI::Draw();
}