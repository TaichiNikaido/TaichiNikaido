//=============================================================================
//
// 火の粉 [sparks.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "sparks.h"
#include "particle_texture_sparks.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define INITIAL_POSITION (D3DXVECTOR3(0.0f,0.0f,0.0f))		//位置の初期値
#define INITIAL_ROTATION (D3DXVECTOR3(0.0f,0.0f,0.0f))		//回転の初期値
#define INITIAL_SIZE (D3DXVECTOR3(0.0f,0.0f,0.0f))			//移動量の初期値
#define INITIAL_MOVE (D3DXVECTOR3(0.0f,0.0f,0.0f))			//移動量の初期値
#define INITIAL_LIFE (0)									//体力の初期値

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CSparks::CSparks()
{
	m_Position = INITIAL_POSITION;		//位置
	m_Rotation = INITIAL_ROTATION;		//回転
	m_Size = INITIAL_SIZE;				//サイズ
	m_Move = INITIAL_MOVE;				//移動量
	m_nLife = INITIAL_LIFE;				//体力
}

//=============================================================================
// デストラクタ
//=============================================================================
CSparks::~CSparks()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CSparks * CSparks::Create(void)
{
	//火の粉のポインタ
	CSparks * pSparks = NULL;
	//もし火の粉のポインタがNULLの場合
	if (pSparks == NULL)
	{
		//火の粉のメモリ確保
		pSparks = new CSparks;
		//もし火の粉のポインタがNULLじゃない場合
		if (pSparks != NULL)
		{
			//火の粉の初期化処理関数呼び出し
			pSparks->Init();
		}
	}
	//火の粉のポインタを返す
	return pSparks;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CSparks::Init(void)
{
	CSparksTexture::Create(INITIAL_POSITION, INITIAL_ROTATION, D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), 100);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CSparks::Uninit(void)
{
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CSparks::Update(void)
{
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CSparks::Draw(void)
{
}