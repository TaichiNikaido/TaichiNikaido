//=============================================================================
//
// チュートリアルボタン [button_tutorial.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "sound.h"
#include "button_tutorial.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CTutorialButton::CTutorialButton()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CTutorialButton::~CTutorialButton()
{
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
CTutorialButton * CTutorialButton::Create(D3DXVECTOR3 Position)
{
	//チュートリアルボタンのポインタ
	CTutorialButton * pTutoruialButton = NULL;
	//チュートリアルボタンのポインタがNULLの場合
	if (pTutoruialButton == NULL)
	{
		//チュートリアルボタンのメモリ確保
		pTutoruialButton = new CTutorialButton;
		//チュートリアルボタンのポインタがNULLではない場合
		if (pTutoruialButton != NULL)
		{
			//チュートリアルボタンの位置を設定する
			pTutoruialButton->SetPosition(Position);
			//チュートリアルボタンの初期化処理関数呼び出し
			pTutoruialButton->Init();
		}
	}
	//チュートリアルボタンのポインタを返す
	return pTutoruialButton;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CTutorialButton::Init(void)
{
	//ボタンの初期化処理関数呼び出し
	CButton::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CTutorialButton::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CButton::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CTutorialButton::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CButton::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CTutorialButton::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CButton::Draw();
}

//=============================================================================
// プレス処理関数
//=============================================================================
void CTutorialButton::Press(void)
{
	//サウンドの取得
	CSound * pSound = CManager::GetSound();
	//もしサウンドのポインタがNULLじゃない場合
	if (pSound != NULL)
	{
		//決定音の再生
		pSound->PlaySoundA(CSound::SOUND_LABEL_SE_BUTTON_PUSH);
	}
	//チュートリアルモードに遷移する
	CManager::StartFade(CManager::MODE_TUTORIAL);
}
