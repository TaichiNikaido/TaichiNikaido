//=============================================================================
//
// 村ゲージの枠 [gaugeflame_village.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "gaugeflame_village.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_PASS ("Data/Texture")
#define SCRIPT_PASS ("Data/Script")

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************
LPDIRECT3DTEXTURE9 CGaugeFlameVillage::m_pTexture = NULL;	//テクスチャのポインタ

//=============================================================================
// コンストラクタ
//=============================================================================
CGaugeFlameVillage::CGaugeFlameVillage()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CGaugeFlameVillage::~CGaugeFlameVillage()
{
}

//=============================================================================
// テクスチャ読み込み関数
//=============================================================================
HRESULT CGaugeFlameVillage::TextureLoad(void)
{
	//レンダラーの取得
	CRenderer *pRenderer = CManager::GetRenderer();
	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();
	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice,	// デバイスへのポインタ
		TEXTURE_PASS,					// ファイルの名前
		&m_pTexture);					// 読み込むメモリー
	return S_OK;
}

//=============================================================================
// テクスチャ破棄関数
//=============================================================================
void CGaugeFlameVillage::TextureUnload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄処理関数呼び出し
		m_pTexture->Release();
		//テクスチャをNULLにする
		m_pTexture = NULL;
	}
}

//=============================================================================
// 生成処理関数
//=============================================================================
CGaugeFlameVillage * CGaugeFlameVillage::Create(void)
{
	//村ゲージの枠のポインタ
	CGaugeFlameVillage * pGaugeFlameVillage = NULL;
	//村ゲージの枠がNULLの場合
	if (pGaugeFlameVillage == NULL)
	{
		//村ゲージの枠のメモリ確保
		pGaugeFlameVillage = new CGaugeFlameVillage;
		//村ゲージの枠がNULLではない場合
		if (pGaugeFlameVillage != NULL)
		{
			//村ゲージの枠の初期化処理関数呼び出し
			pGaugeFlameVillage->Init();
		}
	}
	//村ゲージの枠のポインタを返す
	return pGaugeFlameVillage;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CGaugeFlameVillage::Init(void)
{
	//スクリプトパスの設定
	SetScriptPass(SCRIPT_PASS);
	//ゲージフレームの初期化処理関数呼び出し
	CGaugeFlame::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CGaugeFlameVillage::Uninit(void)
{
	//ゲージフレームの終了処理関数呼び出し
	CGaugeFlame::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CGaugeFlameVillage::Update(void)
{
	//ゲージフレームの更新処理関数呼び出し
	CGaugeFlame::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CGaugeFlameVillage::Draw(void)
{
	//ゲージフレームの描画処理関数呼び出し
	CGaugeFlame::Draw();
}