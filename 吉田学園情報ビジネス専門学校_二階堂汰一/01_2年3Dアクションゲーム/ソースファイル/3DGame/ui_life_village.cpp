//=============================================================================
//
// 村のライフのUI [ui_life_village.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include <stdio.h>
#include <stdlib.h>
#include "main.h"
#include "manager.h"
#include "mode_game.h"
#include "renderer.h"
#include "ui_life_village.h"
#include "gauge.h"
#include "ui_life.h"
#include "village.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CVillageLifeUI::CVillageLifeUI()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CVillageLifeUI::~CVillageLifeUI()
{
}

//=============================================================================
// 生成処理関数
//=============================================================================
CVillageLifeUI * CVillageLifeUI::Create()
{
	//村のライフのUIポインタ
	CVillageLifeUI * pVillageLifeUI = NULL;
	//村のライフのUIポインタがNULLの場合
	if (pVillageLifeUI == NULL)
	{
		//村のライフのUIのメモリ確保
		pVillageLifeUI = new CVillageLifeUI;
		//村のライフのUIのポインタがNULLではない場合
		if (pVillageLifeUI != NULL)
		{
			//村のライフのUIの初期化処理関数呼び出し
			pVillageLifeUI->Init();
		}
	}
	//村のライフのUIのポインタを返す
	return pVillageLifeUI;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CVillageLifeUI::Init(void)
{
	//村の取得
	CVillage * pVillage = CGameMode::GetVillage();
	//もし村のポインタがNULLじゃない場合
	if (pVillage != NULL)
	{
		//村の体力を取得
		int nLife = pVillage->GetLife();
		//体力の最大値を設定
		SetMaxLife(nLife);
		//体力を設定
		SetLife(nLife);
	}
	//ゲージの生成処理関数呼び出し
	SetGauge(CGauge::Create(D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f)));
	//ライフの初期化処理関数呼び出し
	CLifeUI::Init();
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CVillageLifeUI::Uninit(void)
{
	//ライフのUIの終了処理関数呼び出し
	CLifeUI::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CVillageLifeUI::Update(void)
{
	//ライフのUIの更新処理関数呼び出し
	CLifeUI::Update();
	//村の取得
	CVillage * pVillage = CGameMode::GetVillage();
	//もし村のポインタがNULLじゃない場合
	if (pVillage != NULL)
	{
		//村の体力を取得
		int nLife = pVillage->GetLife();
		//体力を設定
		SetLife(nLife);
	}
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CVillageLifeUI::Draw(void)
{
	//ライフのUIの描画処理関数呼び出し
	CLifeUI::Draw();
}
